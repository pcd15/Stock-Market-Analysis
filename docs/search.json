[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Analyzing the Impacts of Inflation and Interest Rates on the Stock Market",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "proposal.html#introduction-and-data",
    "href": "proposal.html#introduction-and-data",
    "title": "Analyzing the Impacts of Inflation and Interest Rates on the Stock Market",
    "section": "Introduction and data",
    "text": "Introduction and data\nData set 1 comes from 4 sources. The data on the federal-funds rate and inflation rate were obtained from Macrotrends (https://www.macrotrends.net/2015/fed-funds-rate-historical-chart), the data on S&P 500 yearly total returns was obtained from Slickcharts (https://www.slickcharts.com/sp500/returns), and the data for monthly statistics was obtained Official Data (https://www.officialdata.org/us/stocks/s-p-500/1900). The data was collected by retrieving the data publicly published on the stock-market exchange. Each observation represents a different month in a given year. For each month, we’ve compiled the return on investment, as well as the the cumulative value of $100 invested in January of 1900; for each year, we’ve compiled the mean federal-funds rate, inflation rate, YTD returns, and annual change in inflation, all of which are included in historical_data. While the data shows heavy fluctuations, we see that federal funds and inflation rate both peaked around 1980. No ethical concerns."
  },
  {
    "objectID": "proposal.html#research-question",
    "href": "proposal.html#research-question",
    "title": "Analyzing the Impacts of Inflation and Interest Rates on the Stock Market",
    "section": "Research question",
    "text": "Research question\nWith data set 1, we would like to answer the following question: How have interest rates and inflation rates historically impacted the stock market? Tracking historical trends can be useful in maximizing profit from the bullish or bearish market, making it significant for investors or fin-tech workers. Our data assess the impact of quantitative variables such as interest rate and inflation rate. It also assesses categorical variables such as time and whether or not interest rate and inflation rate rose or fell (TRUE if they rose, FALSE if they fell). Our hypothesis is that the stock market (generalized by the S&P 500 index) would be hurt by high inflation and corresponding high interest rates (generalized by the federal-funds rate) because consumers’ discretionary incomes drop and companies are disincentivized from borrowing due to the higher costs associated with taking out a loan."
  },
  {
    "objectID": "proposal.html#glimpse-of-data",
    "href": "proposal.html#glimpse-of-data",
    "title": "Analyzing the Impacts of Inflation and Interest Rates on the Stock Market",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\n# market_by_month was scraped from https://www.officialdata.org/us/stocks/s-p-500/1900\n\nfed_funds_rate <- read_csv(\"data/fed-funds-rate-historical-chart.csv\")\ninflation_rate <- read_csv(\"data/united-states-inflation-rate-cpi.csv\")\nsp500_year <- read_csv(\"data/history.csv\")\nmarket_by_month <- read_csv(\"data/market_by_month.csv\")\n\nglimpse(fed_funds_rate)\n\nRows: 24,473\nColumns: 1\n$ `Macrotrends Data Download` <chr> \"Federal Funds Rate - 62 Year Historical C…\n\nglimpse(inflation_rate)\n\nRows: 71\nColumns: 1\n$ `Macrotrends Data Download` <chr> \"U.S. Inflation Rate 1960-2022\", \"DISCLAIM…\n\nglimpse(sp500_year)\n\nRows: 95\nColumns: 2\n$ `2021`  <dbl> 2020, 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012, 2011, 20…\n$ `28.71` <dbl> 18.40, 31.49, -4.38, 21.83, 11.96, 1.38, 13.69, 32.39, 16.00, …\n\nglimpse(market_by_month)\n\nRows: 1,473\nColumns: 4\n$ year              <dbl> 1900, 1900, 1900, 1900, 1900, 1900, 1900, 1900, 1900…\n$ month             <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5…\n$ monthly_return    <chr> \"2.10%\", \"1.11%\", \"1.59%\", \"-4.42%\", \"-2.64%\", \"0.36…\n$ monthly_avg_price <dbl> 102.10, 103.23, 104.87, 100.24, 97.59, 97.95, 99.65,…\n\n\n\n#|: fixing-and-combining-data-sets-for-year\n\nnames(fed_funds_rate)[1] <- \"day\"\nnames(inflation_rate)[1] <- \"year\"\n\nfed_funds_rate <- fed_funds_rate |>\n  slice(9:nrow(fed_funds_rate)) |>\n  separate(day, into = c(\"day\", \"fed_funds_rate\"), sep = \",\")\n\nfed_funds_rate <- fed_funds_rate |>\n  mutate(day = substring(day, 1, 4))|>\n  rename(year = day) |>\n  group_by(year) |>\n  summarize(mean_fed_funds_rate = mean(as.numeric(fed_funds_rate)))\n  \ninflation_rate <- inflation_rate |>\n  slice(11:nrow(inflation_rate)) |>\n  separate(year, into = c(\"year\", \"inflation_rate\", \"inflation_annual_change\"), sep = \",\")\n\ninflation_rate <- na.omit(inflation_rate)\n\ninflation_rate<- inflation_rate |>\n  mutate(year = substring(year, 1, 4))\n\ncolnames(sp500_year) <- c(\"year\",\"year_to_date_return\")\nsp500_year <- sp500_year|> mutate(year = as.character(year))\n\nhistorical_data <- inner_join(inflation_rate, fed_funds_rate, by = \"year\")\nhistorical_data <- inner_join(historical_data, sp500_year, by = \"year\")\n\nhistorical_data <- historical_data |>\n  mutate(\n    mean_fed_funds_rate = round(mean_fed_funds_rate * 100) / 100,\n    time_period = if_else(year > 1990, \"recent\", \"not so recent\"),\n    year_character = as.character(year),\n    decade = case_when(\n      str_detect(year_character, \"196\") ~ \"'60s\",\n      str_detect(year_character, \"197\") ~ \"'70s\",\n      str_detect(year_character, \"198\") ~ \"'80s\",\n      str_detect(year_character, \"199\") ~ \"'90s\",\n      str_detect(year_character, \"197\") ~ \"'70s\",\n      str_detect(year_character, \"198\") ~ \"'80s\",\n      str_detect(year_character, \"199\") ~ \"'90s\",\n      str_detect(year_character, \"200\") ~ \"2000s\",\n      str_detect(year_character, \"201\") ~ \"2010s\",\n      str_detect(year_character, \"202\") ~ \"2020\",\n    )\n  ) |>\n  select(\n    year, inflation_rate, inflation_annual_change, \n    mean_fed_funds_rate, year_to_date_return, time_period, decade\n  )\n\nglimpse(historical_data)\n\nRows: 60\nColumns: 7\n$ year                    <chr> \"1961\", \"1962\", \"1963\", \"1964\", \"1965\", \"1966\"…\n$ inflation_rate          <chr> \"1.0707\", \"1.1988\", \"1.2397\", \"1.2789\", \"1.585…\n$ inflation_annual_change <chr> \"-0.39\", \"0.13\", \"0.04\", \"0.04\", \"0.31\", \"1.43…\n$ mean_fed_funds_rate     <dbl> 1.95, 2.71, 3.18, 3.50, 4.08, 5.11, 4.22, 5.66…\n$ year_to_date_return     <dbl> 26.89, -8.73, 22.80, 16.48, 12.45, -10.06, 23.…\n$ time_period             <chr> \"not so recent\", \"not so recent\", \"not so rece…\n$ decade                  <chr> \"'60s\", \"'60s\", \"'60s\", \"'60s\", \"'60s\", \"'60s\"…\n\nview(historical_data)\n\n\n#|: combining-data-sets-for-month\n\nmarket_by_month <- market_by_month |>\n  mutate(\n    year = as.character(year)\n  )\n\nhistorical_data <- historical_data |>\n  left_join(market_by_month, by = \"year\")\n  \nhistorical_data <- historical_data |>\n  relocate(\n    year, month, monthly_return, monthly_avg_price\n  )\n  \nglimpse(historical_data)\n\nRows: 720\nColumns: 10\n$ year                    <chr> \"1961\", \"1961\", \"1961\", \"1961\", \"1961\", \"1961\"…\n$ month                   <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3…\n$ monthly_return          <chr> \"4.37%\", \"3.40%\", \"2.92%\", \"1.26%\", \"-1.08%\", …\n$ monthly_avg_price       <dbl> 25134.18, 25988.00, 26746.59, 27084.50, 26791.…\n$ inflation_rate          <chr> \"1.0707\", \"1.0707\", \"1.0707\", \"1.0707\", \"1.070…\n$ inflation_annual_change <chr> \"-0.39\", \"-0.39\", \"-0.39\", \"-0.39\", \"-0.39\", \"…\n$ mean_fed_funds_rate     <dbl> 1.95, 1.95, 1.95, 1.95, 1.95, 1.95, 1.95, 1.95…\n$ year_to_date_return     <dbl> 26.89, 26.89, 26.89, 26.89, 26.89, 26.89, 26.8…\n$ time_period             <chr> \"not so recent\", \"not so recent\", \"not so rece…\n$ decade                  <chr> \"'60s\", \"'60s\", \"'60s\", \"'60s\", \"'60s\", \"'60s\"…"
  },
  {
    "objectID": "proposal.html#introduction-and-data-1",
    "href": "proposal.html#introduction-and-data-1",
    "title": "Analyzing the Impacts of Inflation and Interest Rates on the Stock Market",
    "section": "Introduction and data",
    "text": "Introduction and data\n\nThe source of the data is Investing.com (https://www.investing.com/indices/us-spx-500-historical-data), who gets their live data from financial-data providers, including the stock market exchange and directly from market makers (who set stock prices to match supply and demand). The data is collected daily (well really, every second), and it is collected by monitoring various operations (selling, buying, etc.) done in the stock market, which lead to increases and decreases in prices (which are then ultimately collected). Each observation represents a different day this year, with each day having data on the high/low/opening/closing prices, differences in high/low and opening/closing prices, daily percentage change, and whether the change in price for the day was a gain. The observations show heavy fluctuation as expected with something as volatile as the stock market, but this year a general decline in share prices is evident, which could partially be attributed to inflation and interest rates. No ethical concerns."
  },
  {
    "objectID": "proposal.html#research-question-1",
    "href": "proposal.html#research-question-1",
    "title": "Analyzing the Impacts of Inflation and Interest Rates on the Stock Market",
    "section": "Research question",
    "text": "Research question\n\nWith the highest inflation rates ever seen, traders and those who work in the financial industry are even more unsure about how to go about trading in the stock market. Of course it is difficult to ever predict the market, but even more so in times like this. With this dataset, we would like to address the following question: how have high inflation rates and interest rates impacted the S&P 500 this year? And how does this compare to the stock market’s historical performance in similar economic times? This question is important as people want to know that when they invest in something, generally their money is safe. In times like these, it’s hard to say when it is actually safe to invest in something, and so we want to delve deeper into when you might actually want to be bullish or bearish in times like these. Our hypothesis is the following: while the stock market will fall as inflation rates rise (which are followed by interest rates as well), there are good times to invest even with the problematic circumstances. Our variables are mostly quantitative, analyzing interest rates, inflation rates, stock price rise and falls, while the categorical variables are the date and whether or not there was a net gain or loss (categorized by TRUE if gain and FALSE if not) on the day."
  },
  {
    "objectID": "proposal.html#glimpse-of-data-1",
    "href": "proposal.html#glimpse-of-data-1",
    "title": "Analyzing the Impacts of Inflation and Interest Rates on the Stock Market",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\nsp500_current <- read_csv(\"data/S&amp;P 500 Historical Data (5).csv\")\n\nglimpse(sp500_current)\n\nRows: 524\nColumns: 7\n$ Date       <chr> \"10/28/2022\", \"10/27/2022\", \"10/26/2022\", \"10/25/2022\", \"10…\n$ Price      <dbl> 3901.06, 3807.30, 3830.60, 3859.11, 3797.34, 3752.75, 3665.…\n$ Open       <dbl> 3808.26, 3834.69, 3825.97, 3799.44, 3762.01, 3657.10, 3689.…\n$ High       <dbl> 3905.42, 3859.95, 3886.15, 3862.85, 3810.74, 3757.89, 3736.…\n$ Low        <dbl> 3808.26, 3803.79, 3824.07, 3799.44, 3741.65, 3647.42, 3656.…\n$ Vol.       <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ `Change %` <chr> \"2.46%\", \"-0.61%\", \"-0.74%\", \"1.63%\", \"1.19%\", \"2.37%\", \"-0…\n\n\n\nsp500_curr_updated <- sp500_current |>\nmutate(\n    daily_diff = Price - Open,\n    high_minus_low = High - Low,\n  daily_percent_change = ((Price - Open) / Open) * 100,\n    gain = daily_diff > 0\n) |>\n  select(Date, Price, Open, High, Low, daily_percent_change, daily_diff, high_minus_low, gain)\n\nglimpse(sp500_curr_updated)\n\nRows: 524\nColumns: 9\n$ Date                 <chr> \"10/28/2022\", \"10/27/2022\", \"10/26/2022\", \"10/25/…\n$ Price                <dbl> 3901.06, 3807.30, 3830.60, 3859.11, 3797.34, 3752…\n$ Open                 <dbl> 3808.26, 3834.69, 3825.97, 3799.44, 3762.01, 3657…\n$ High                 <dbl> 3905.42, 3859.95, 3886.15, 3862.85, 3810.74, 3757…\n$ Low                  <dbl> 3808.26, 3803.79, 3824.07, 3799.44, 3741.65, 3647…\n$ daily_percent_change <dbl> 2.4368084, -0.7142690, 0.1210151, 1.5704946, 0.93…\n$ daily_diff           <dbl> 92.80, -27.39, 4.63, 59.67, 35.33, 95.65, -23.27,…\n$ high_minus_low       <dbl> 97.16, 56.16, 62.08, 63.41, 69.09, 110.47, 79.56,…\n$ gain                 <lgl> TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE…"
  },
  {
    "objectID": "proposal.html#introduction-and-data-2",
    "href": "proposal.html#introduction-and-data-2",
    "title": "Analyzing the Impacts of Inflation and Interest Rates on the Stock Market",
    "section": "Introduction and data",
    "text": "Introduction and data\nThe source of the data is DATA HUB (https://datahub.io/core/s-and-p-500-companies-financials#resource-constituents). This data was collected from S&P Dow Jones Indices which is collected daily. Each observation represents a different company; for each company, their name, ticker symbol, weighting percentage in the S&P 500 index, price at the beginning of the year, current price, YTD return, sector, and return category (positive if YTD return > 0, else positive) are compiled. The observation shows that over the course of the year the share price has gone down, with the exception of October, where it went up 2.24% (and then fell down again). The year-to-date return was -23.09%, and month-to-date return was 2.24%. No ethical concerns."
  },
  {
    "objectID": "proposal.html#research-question-2",
    "href": "proposal.html#research-question-2",
    "title": "Analyzing the Impacts of Inflation and Interest Rates on the Stock Market",
    "section": "Research question",
    "text": "Research question\nGathering data on how different businesses are performing, and whether this correlates with the industry they are in, is useful to indicate whether performance patterns are caused by individual businesses or specific sectors, and strategies can be derived from each. Our hypothesis is the following: Non-essential industries will decrease more in price (have lower YTD returns) than essential industries, as consumers must purchase essential goods no matter how high the inflation rate is. The type of variables in our research question are mainly quantitative, analyzing inflation rate, interest rate and comparing these across sectors and specific businesses (these are our categorical variables)."
  },
  {
    "objectID": "proposal.html#glimpse-of-data-2",
    "href": "proposal.html#glimpse-of-data-2",
    "title": "Analyzing the Impacts of Inflation and Interest Rates on the Stock Market",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\nsp500_by_company <- read_csv(\"data/sp500_by_company.csv\")\nsp500_by_sector <- read_csv(\"data/constituents_csv.csv\")\n\nglimpse(sp500_by_company)\n\nRows: 503\nColumns: 5\n$ company       <chr> \"Apple Inc.\", \"Microsoft Corporation\", \"Amazon.com Inc.\"…\n$ symbol        <chr> \"AAPL\", \"MSFT\", \"AMZN\", \"GOOGL\", \"TSLA\", \"GOOG\", \"BRK.B\"…\n$ weight        <dbl> 6.940598, 5.685000, 3.296234, 1.931161, 1.874430, 1.7375…\n$ current_price <chr> \"  144.00\", \"  236.16\", \"  115.13\", \"  99.91\", \"  214.29…\n$ ytd_return    <chr> \"-19.05%\", \"-29.09%\", \"-30.21%\", \"-30.43%\", \"-37.49%\", \"…\n\nglimpse(sp500_by_sector)\n\nRows: 505\nColumns: 3\n$ Symbol <chr> \"MMM\", \"AOS\", \"ABT\", \"ABBV\", \"ABMD\", \"ACN\", \"ATVI\", \"ADM\", \"ADB…\n$ Name   <chr> \"3M\", \"A. O. Smith\", \"Abbott Laboratories\", \"AbbVie\", \"Abiomed\"…\n$ Sector <chr> \"Industrials\", \"Industrials\", \"Health Care\", \"Health Care\", \"He…\n\n\n\n#|: combining-data-set\n# sp500_by_company was created by joining two scraped data frames\n# scraped from:\n# https://www.slickcharts.com/sp500\n# https://www.slickcharts.com/sp500/performance\n\nsp500_by_sector <- sp500_by_sector |>\n  mutate(\n    symbol = Symbol,\n    name = Name,\n    sector = Sector\n  ) |>\n  select(symbol, name, sector)\n\nsp500_by_company_and_sector <- sp500_by_company |>\n  left_join(sp500_by_sector, by = \"symbol\") |>\n  relocate(name) |>\n  select(name, symbol, weight, current_price, ytd_return, sector)\n\n\n#|: fixing-NAs-and-adding-vars\n\nsp500_by_company_and_sector <- sp500_by_company_and_sector |>\n  mutate(\n    ytd_return_num = str_remove(ytd_return, \"%\"),\n    ytd_return_num = as.numeric(ytd_return_num),\n    current_price = str_trim(current_price),\n    current_price = as.numeric(current_price),\n    return_category = if_else(ytd_return_num > 0, \"positive\", \"negative\"),\n    ytd_factor =  (ytd_return_num + 100) / 100,\n    original_price = current_price / ytd_factor, \n    name = case_when(\n      symbol == \"MOH\" ~ \"Molina Healthcare\",\n      symbol == \"EPAM\" ~ \"EPAM Systems\",\n      symbol == \"ELV\" ~ \"Elevance Health\",\n      symbol == \"KDP\" ~ \"Keurig Dr Pepper\",\n      symbol == \"VICI\" ~ \"Vici Properties\",\n      symbol == \"META\" ~ \"Meta Platforms\",\n      symbol == \"CSGP\" ~ \"CoStar Group\",\n      symbol == \"WBD\" ~ \"Warner Bros Discovery\",\n      symbol == \"CEG\" ~ \"Constellation Energy\",\n      symbol == \"ON\" ~ \"ON Semiconductor\",\n      symbol == \"WTW\" ~ \"Willis Towers Watson\",\n      symbol == \"PCG\" ~ \"PG&E\",\n      symbol == \"INVH\" ~ \"Invitation Homes\",\n      symbol == \"BALL\" ~ \"Ball\",\n      symbol == \"FDS\" ~ \"FactSet Research Systems\",\n      symbol == \"EQT\" ~ \"EQT\",\n      symbol == \"TRGP\" ~ \"Targa Resources\",\n      symbol == \"CPT\" ~ \"Camden Property Trust\",\n      symbol == \"NDSN\" ~ \"Nordson\",\n      symbol == \"SEDG\" ~ \"Solaredge Technologies\",\n      symbol == \"PARA\" ~ \"Paramount Global Class B\",\n      symbol == \"SBNY\" ~ \"Signature Bank\",\n      TRUE ~ name\n    ),\n    sector = case_when(\n      symbol == \"MOH\" ~ \"Health Care\",\n      symbol == \"EPAM\" ~ \"Information Technology\",\n      symbol == \"ELV\" ~ \"Health Care\",\n      symbol == \"KDP\" ~ \"Consumer Staples\",\n      symbol == \"VICI\" ~ \"Real Estate\",\n      symbol == \"META\" ~ \"Communication Services\",\n      symbol == \"CSGP\" ~ \"Real Estate\",\n      symbol == \"WBD\" ~ \"Communication Services\",\n      symbol == \"CEG\" ~ \"Utilities\",\n      symbol == \"ON\" ~ \"Materials\",\n      symbol == \"WTW\" ~ \"Communication Services\",\n      symbol == \"PCG\" ~ \"Energy\",\n      symbol == \"INVH\" ~ \"Real Estate\",\n      symbol == \"BALL\" ~ \"Materials\",\n      symbol == \"FDS\" ~ \"Information Technology\",\n      symbol == \"EQT\" ~ \"Utilities\",\n      symbol == \"TRGP\" ~ \"Utilities\",\n      symbol == \"CPT\" ~ \"Real Estate\",\n      symbol == \"NDSN\" ~ \"Industrials\",\n      symbol == \"SEDG\" ~ \"Materials\",\n      symbol == \"PARA\" ~ \"Communication Services\",\n      symbol == \"SBNY\" ~ \"Financials\",\n      TRUE ~ sector\n    )\n  ) |>\n  select(\n    name, symbol, weight, original_price, \n    current_price, ytd_return_num, sector, return_category\n  )\n\nglimpse(sp500_by_company_and_sector)\n\nRows: 503\nColumns: 8\n$ name            <chr> \"Apple\", \"Microsoft\", \"Amazon\", \"Alphabet (Class A)\", …\n$ symbol          <chr> \"AAPL\", \"MSFT\", \"AMZN\", \"GOOGL\", \"TSLA\", \"GOOG\", \"BRK.…\n$ weight          <dbl> 6.940598, 5.685000, 3.296234, 1.931161, 1.874430, 1.73…\n$ original_price  <dbl> 177.88758, 333.04188, 164.96633, 143.61075, 342.80915,…\n$ current_price   <dbl> 144.00, 236.16, 115.13, 99.91, 214.29, 100.60, 278.50,…\n$ ytd_return_num  <dbl> -19.05, -29.09, -30.21, -30.43, -37.49, -29.92, -5.80,…\n$ sector          <chr> \"Information Technology\", \"Information Technology\", \"C…\n$ return_category <chr> \"negative\", \"negative\", \"negative\", \"negative\", \"negat…\n\n\n\n#|: saving-created-data-sets-to-data-folder\n\nwrite_csv(historical_data, file = \"data/historical_data.csv\")\nwrite_csv(sp500_curr_updated, file = \"data/sp500_curr_updated.csv\")\nwrite_csv(sp500_by_company_and_sector, file = \"data/sp500_by_company_and_sector.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TEAM NAME",
    "section": "",
    "text": "Add project abstract here."
  },
  {
    "objectID": "report.html",
    "href": "report.html",
    "title": "The Impacts of Inflation and Interest Rates on the Stock Market",
    "section": "",
    "text": "Introduction\nWe want to explore the relationship between interest and inflation rates and the performance of the stock market. In doing so, we hope to determine economic characteristics in which it’s beneficial to invest in the stock market, as well as if/when certain companies or sectors perform better in different economic climates. Therefore, we are interested in answering the following questions:\n\nHow have these rates (inflation and interest) historically impacted the returns of the stock market?\nHow closely has the current performance of the market (the past two years) followed these historical trends?\nAnd finally, does the current high-rate economic climate disproportionately affect some companies/sectors more than others? If so, why?\n\nHypotheses: We believe the overall stock market would be hurt by high inflation and corresponding high interest rates, both because consumers’ discretionary incomes drop and because companies are disincentivized from borrowing, due to the higher costs associated with taking out a loan. We expect to see this relationship in both our historical analysis and our current-day analysis. Conversely, in times of lower rates, we expect market returns to be higher, on average. Though we expect the stock market as a whole to suffer from high rates, we believe certain sectors of the economy could serve as silver linings for investors’ pockets; these industries include: financials, health care, utilities, and consumer staples. We believe these sectors could perform better than the aggregate market because they sell essential goods that consumers must purchase no matter the state of the economy (health care, utilities, and consumer staples). Also, we believe the financials sector will do well because banks are able to charge higher interest rates on their loans (and thus earn greater profits) when interest rates are high.\nNote: We are using the S&P 500 as a model of the performance of the entire market, and we are using the federal-funds rate, the interest rate set by the Federal Reserve, to model the general trend of all interest rates. We believed these are logical assumptions, as the S&P 500 includes the 500 largest US-based companies (and thus covers a large portion of the total market) and the federal-funds rate generally serves as a benchmark for all other interest rates. Also, all of our observations feature the performance of the market (S&P 500) or an individual company in the S&P 500 on a specific day/month/year.\n\n\n\nPart 1: Historical Analysis\nSources:\n\nFederal Funds Rate and Inflation Rate: Macrotrends (https://www.macrotrends.net/2015/fed-funds-rate-historical-chart)\nS&P 500 Annual Returns: Slickcharts (https://www.slickcharts.com/sp500/returns)\nMonthly Statistics (scraped): Official Data (https://www.officialdata.org/us/stocks/s-p-500/1900).\n\nAll of these sites collected these data by retrieving the data published publicly on stock exchanges, except for the federal-funds rate–this data was collected from the World Bank. In addition, each of these sites updates their data monthly/yearly (although they could update it daily, as they are collecting live data). Each observation represents a month in a year (between 1961 and 2020) and includes the following variables:\n\n\n\n\n\n\n\nVariable\nDefinition\n\n\n\n\nyear\nyear in which observation was recorded\n\n\nmonth\nmonth in which observation was recorded\n\n\nmonthly_return\ntotal stock market’s monthly return\n\n\nyear_to_date_return\nS&P 500’s yearly return\n\n\nmean_fed_funds_rate\nmean annual interest rate set by the Federal Reserve\n\n\ninflation rate\nmean annual inflation rate\n\n\ndecade\nrepresents decade in which observation was made\n\n\ntime_period\ncategorizes observation as “recent” or “not so recent,” with years after 1990 classified as recent\n\n\n\n\n#|: loading-historical-data\n\nhistorical_data <- read_csv(\"data/historical_data.csv\")\nglimpse(historical_data)\n\nRows: 720\nColumns: 7\n$ year                    <dbl> 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961…\n$ inflation_rate          <dbl> 1.0707, 1.0707, 1.0707, 1.0707, 1.0707, 1.0707…\n$ inflation_annual_change <dbl> -0.39, -0.39, -0.39, -0.39, -0.39, -0.39, -0.3…\n$ mean_fed_funds_rate     <dbl> 1.95, 1.95, 1.95, 1.95, 1.95, 1.95, 1.95, 1.95…\n$ year_to_date_return     <dbl> 26.89, 26.89, 26.89, 26.89, 26.89, 26.89, 26.8…\n$ time_period             <chr> \"not so recent\", \"not so recent\", \"not so rece…\n$ decade                  <chr> \"'60s\", \"'60s\", \"'60s\", \"'60s\", \"'60s\", \"'60s\"…\n\n\n\n#|: inflation-vs-interest-plot\n# Completed with assistance from: https://community.rstudio.com/t/adding-manual-legend-to-ggplot2/41651/5\n\ncolors <- c(\"Inflation\" = \"blue\", \"Interest\" = \"red\")\n\nggplot(historical_data) +\n  geom_line(aes(x = year, y = mean_fed_funds_rate, color = \"Interest\")) +\n  geom_line(aes(x = year, y = inflation_rate, color = \"Inflation\")) +\n  theme_minimal() +\n  labs(\n    title = \"Interest Rates vs. Inflation Rates\",\n    subtitle = \"1961 - 2020\",\n    x = \"Year\",\n    y = \"Average Annual Rate (%)\",\n    color = \"Type\"\n  ) +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5),\n    legend.title = element_text(hjust = 0.5)\n  ) +\n  scale_color_manual(values = colors)\n\n\n\n\n\n#|: interest-inflation-and-market-returns-graph\n\ncolors_redux <- c(\"Inflation\" = \"blue\", \"Interest\" = \"red\", \"Market Returns\" = \"dark green\")\n\nhistorical_data |>\n  ggplot() +\n  geom_line(aes(x = year, y = mean_fed_funds_rate, color = \"Interest\")) +\n  geom_line(aes(x = year, y = inflation_rate, color = \"Inflation\")) +\n  geom_line(aes(x = year, y = year_to_date_return, color = \"Market Returns\")) +\n  theme_minimal() +\n  labs(\n    title = \"Impacts of Interest Rates and Inflation Rates on Market Returns\",\n    subtitle = \"1961 - 2020\",\n    x = \"Year\",\n    y = \"Average Annual Rate (%)\",\n    color = \"Type\"\n  ) +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5),\n    legend.title = element_text(hjust = 0.5)\n  ) +\n  scale_color_manual(values = colors_redux)\n\n\n\n\n\n#|: functions-for-finding-min-and-max-years-of-criteria-by-time-period\n\nfindMax <- function(sort_by_criteria, num_years, time_period_category) {\n  filter(time_period == time_period_category) |>\n  distinct(year, mean_fed_funds_rate, inflation_rate, year_to_date_return) |>\n  arrange(desc(sort_by_criteria)) |>\n  slice_head(n = num_years) |> \n  relocate(year, sort_by_criteria)\n}\n\nfindMin <- function(df, sort_by_criteria, num_years, time_period_category) {\n  df |>\n\n  distinct(df$year, df$mean_fed_funds_rate, df$inflation_rate, df$year_to_date_return) |>\n  arrange(df$sort_by_criteria) |>\n  slice_head(n = as.numeric(num_years)) |> \n  relocate(df$year, sort_by_criteria)\n}\n\n\n#|: top-ten-years-of-highest-interest-by-time-period\n\nhistorical_data |> \n  filter(time_period == \"not so recent\") |>\n  distinct(year, mean_fed_funds_rate, inflation_rate, year_to_date_return) |>\n  arrange(desc(mean_fed_funds_rate)) |>\n  slice_head(n = 10) |> \n  relocate(year, mean_fed_funds_rate)\n\n# A tibble: 10 × 4\n    year mean_fed_funds_rate inflation_rate year_to_date_return\n   <dbl>               <dbl>          <dbl>               <dbl>\n 1  1981               16.4           10.3                -4.91\n 2  1980               13.4           13.5                32.4 \n 3  1982               12.2            6.13               21.6 \n 4  1979               11.2           11.3                18.4 \n 5  1974               10.5           11.1               -26.5 \n 6  1984               10.2            4.30                6.27\n 7  1989                9.21           4.83               31.7 \n 8  1983                9.09           3.21               22.6 \n 9  1973                8.74           6.18              -14.7 \n10  1969                8.21           5.46               -8.5 \n\nhistorical_data |> \n  filter(time_period == \"recent\") |>\n  distinct(year, mean_fed_funds_rate, inflation_rate, year_to_date_return) |>\n  arrange(desc(mean_fed_funds_rate)) |>\n  slice_head(n = 10) |> \n  relocate(year, mean_fed_funds_rate)\n\n# A tibble: 10 × 4\n    year mean_fed_funds_rate inflation_rate year_to_date_return\n   <dbl>               <dbl>          <dbl>               <dbl>\n 1  2000                6.24           3.38               -9.1 \n 2  1995                5.83           2.81               37.6 \n 3  1991                5.69           4.24               30.5 \n 4  1997                5.46           2.34               33.4 \n 5  1998                5.35           1.55               28.6 \n 6  1996                5.3            2.93               23.0 \n 7  2007                5.02           2.85                5.49\n 8  1999                4.97           2.19               21.0 \n 9  2006                4.97           3.23               15.8 \n10  1994                4.21           2.61                1.32\n\n\n\n#|: top-ten-years-of-highest-inflation-by-time-period\n\nhistorical_data |>\n  filter(time_period == \"not so recent\") |>\n  distinct(year, mean_fed_funds_rate, inflation_rate, year_to_date_return) |>\n  arrange(desc(inflation_rate)) |>\n  slice_head(n = 10)\n\n# A tibble: 10 × 4\n    year inflation_rate mean_fed_funds_rate year_to_date_return\n   <dbl>          <dbl>               <dbl>               <dbl>\n 1  1980          13.5                13.4                32.4 \n 2  1979          11.3                11.2                18.4 \n 3  1974          11.1                10.5               -26.5 \n 4  1981          10.3                16.4                -4.91\n 5  1975           9.14                5.82               37.2 \n 6  1978           7.63                7.94                6.56\n 7  1977           6.50                5.54               -7.18\n 8  1973           6.18                8.74              -14.7 \n 9  1982           6.13               12.2                21.6 \n10  1970           5.84                7.17                4.01\n\nhistorical_data |>\n  filter(time_period == \"recent\") |>\n  distinct(year, mean_fed_funds_rate, inflation_rate, year_to_date_return) |>\n  arrange(desc(inflation_rate)) |>\n  slice_head(n = 10)\n\n# A tibble: 10 × 4\n    year inflation_rate mean_fed_funds_rate year_to_date_return\n   <dbl>          <dbl>               <dbl>               <dbl>\n 1  1991           4.24                5.69               30.5 \n 2  2008           3.84                1.92              -37   \n 3  2005           3.39                3.22                4.91\n 4  2000           3.38                6.24               -9.1 \n 5  2006           3.23                4.97               15.8 \n 6  2011           3.16                0.1                 2.11\n 7  1992           3.03                3.52                7.62\n 8  1993           2.95                3.02               10.1 \n 9  1996           2.93                5.3                23.0 \n10  2007           2.85                5.02                5.49\n\n\n\n#|: top-ten-years-of-highest-returns-by-time-period\n\nhistorical_data |>\n  filter(time_period == \"not so recent\") |>\n  distinct(year, mean_fed_funds_rate, inflation_rate, year_to_date_return) |>\n  arrange(desc(year_to_date_return)) |>\n  slice_head(n = 10) |>\n  relocate(year, year_to_date_return)\n\n# A tibble: 10 × 4\n    year year_to_date_return inflation_rate mean_fed_funds_rate\n   <dbl>               <dbl>          <dbl>               <dbl>\n 1  1975                37.2           9.14                5.82\n 2  1980                32.4          13.5                13.4 \n 3  1985                31.7           3.55                8.1 \n 4  1989                31.7           4.83                9.21\n 5  1961                26.9           1.07                1.95\n 6  1967                24.0           2.77                4.22\n 7  1976                23.8           5.74                5.05\n 8  1963                22.8           1.24                3.18\n 9  1983                22.6           3.21                9.09\n10  1982                21.6           6.13               12.2 \n\nhistorical_data |>\n  filter(time_period == \"recent\") |>\n  distinct(year, mean_fed_funds_rate, inflation_rate, year_to_date_return) |>\n  arrange(desc(year_to_date_return)) |>\n  slice_head(n = 10) |>\n  relocate(year, year_to_date_return)\n\n# A tibble: 10 × 4\n    year year_to_date_return inflation_rate mean_fed_funds_rate\n   <dbl>               <dbl>          <dbl>               <dbl>\n 1  1995                37.6          2.81                 5.83\n 2  1997                33.4          2.34                 5.46\n 3  2013                32.4          1.46                 0.11\n 4  2019                31.5          1.81                 2.16\n 5  1991                30.5          4.24                 5.69\n 6  2003                28.7          2.27                 1.13\n 7  1998                28.6          1.55                 5.35\n 8  2009                26.5         -0.356                0.16\n 9  1996                23.0          2.93                 5.3 \n10  2017                21.8          2.13                 1   \n\n\n\n#|: worst-ten-years-of-highest-interest-by-time-period\n\nhistorical_data |> \n  filter(time_period == \"not so recent\") |>\n  distinct(year, mean_fed_funds_rate, inflation_rate, year_to_date_return) |>\n  arrange(mean_fed_funds_rate) |>\n  slice_head(n = 10) |> \n  relocate(year, mean_fed_funds_rate)\n\n# A tibble: 10 × 4\n    year mean_fed_funds_rate inflation_rate year_to_date_return\n   <dbl>               <dbl>          <dbl>               <dbl>\n 1  1961                1.95           1.07               26.9 \n 2  1962                2.71           1.20               -8.73\n 3  1963                3.18           1.24               22.8 \n 4  1964                3.5            1.28               16.5 \n 5  1965                4.08           1.59               12.4 \n 6  1967                4.22           2.77               24.0 \n 7  1972                4.44           3.27               19.0 \n 8  1971                4.67           4.29               14.3 \n 9  1976                5.05           5.74               23.8 \n10  1966                5.11           3.02              -10.1 \n\nhistorical_data |> \n  filter(time_period == \"recent\") |>\n  distinct(year, mean_fed_funds_rate, inflation_rate, year_to_date_return) |>\n  arrange(mean_fed_funds_rate) |>\n  slice_head(n = 10) |> \n  relocate(year, mean_fed_funds_rate)\n\n# A tibble: 10 × 4\n    year mean_fed_funds_rate inflation_rate year_to_date_return\n   <dbl>               <dbl>          <dbl>               <dbl>\n 1  2014                0.09          1.62                13.7 \n 2  2011                0.1           3.16                 2.11\n 3  2013                0.11          1.46                32.4 \n 4  2015                0.13          0.119                1.38\n 5  2012                0.14          2.07                16   \n 6  2009                0.16         -0.356               26.5 \n 7  2010                0.18          1.64                15.1 \n 8  2020                0.36          1.23                18.4 \n 9  2016                0.39          1.26                12.0 \n10  2017                1             2.13                21.8 \n\nhistorical_data |> \n  filter(time_period == \"recent\") |>\n  distinct(year, mean_fed_funds_rate, inflation_rate, year_to_date_return) |>\n  arrange(mean_fed_funds_rate) |>\n  slice_head(n = 10) |> \n  relocate(year, mean_fed_funds_rate) |>\n  summarize(mean_return = mean(year_to_date_return))\n\n# A tibble: 1 × 1\n  mean_return\n        <dbl>\n1        15.9\n\n\nResults:\n\n\n\nPart 2: Current-day Analysis\nSource:\n\nInvesting.com (https://www.investing.com/indices/us-spx-500-historical-data)\n\nInvesting.com gets their data from financial-data providers, including stock exchanges and/or directly from market makers (who set stock prices to match supply and demand). The data is collected in real time by monitoring transactions (selling, buying, etc.) executed in the stock market, which correspond to increases/decreases in prices. Each observation represents a different day (between 1 October 2020 and 28 October 2022) and includes the following variables:\n\n\n\n\n\n\n\nVariable\nDefinition\n\n\n\n\ndate\nday on which observation was recorded\n\n\nprice\nclosing daily price for the S&P 500\n\n\nopen\nopening daily price for the S&P 500\n\n\ndaily_percent_change\ndaily percentage difference between opening and closing prices\n\n\ndaily_diff\ndaily numerical difference between opening and closing prices\n\n\ngain\nTRUE if daily_diff > 0 (positive return for the day), else FALSE\n\n\n\n\n#|: loading-current-day-market-data\n\nsp500_curr <- read_csv(\"data/sp500_curr_updated.csv\")\nglimpse(sp500_curr)\n\nRows: 524\nColumns: 9\n$ Date                 <chr> \"10/28/2022\", \"10/27/2022\", \"10/26/2022\", \"10/25/…\n$ Price                <dbl> 3901.06, 3807.30, 3830.60, 3859.11, 3797.34, 3752…\n$ Open                 <dbl> 3808.26, 3834.69, 3825.97, 3799.44, 3762.01, 3657…\n$ High                 <dbl> 3905.42, 3859.95, 3886.15, 3862.85, 3810.74, 3757…\n$ Low                  <dbl> 3808.26, 3803.79, 3824.07, 3799.44, 3741.65, 3647…\n$ daily_percent_change <dbl> 2.4368084, -0.7142690, 0.1210151, 1.5704946, 0.93…\n$ daily_diff           <dbl> 92.80, -27.39, 4.63, 59.67, 35.33, 95.65, -23.27,…\n$ high_minus_low       <dbl> 97.16, 56.16, 62.08, 63.41, 69.09, 110.47, 79.56,…\n$ gain                 <lgl> TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE…\n\n\nResults:\n\n\n\nPart 3: Company/Sector Analysis\nSources:\n\nName, Symbol, and Sector: DATA HUB (https://datahub.io/core/s-and-p-500-companies-financials#resource-constituents)\nWeights (scraped): Slickcharts (https://www.slickcharts.com/sp500)\nPrices and Returns (scraped): Slickcharts (https://www.slickcharts.com/sp500/performance)\n\nDATA HUB collected their data from S&P Dow Jones Indices (which, in turn, is collected daily from stock exchanges), and Slickcharts their data directly from the stock exchange. Each observation represents a different company and includes the following variables:\n\n\n\n\n\n\n\nVariable\nDefinition\n\n\n\n\nname\nname of company in S&P 500\n\n\nsymbol\nticker symbol used to identify companies on stock exchange\n\n\nweight\npercentage weighting of company in S&P 500\n\n\noriginal_price\nprice of company’s stock at beginning of 2022\n\n\ncurrent_price\nprice of company’s stock as of October 2022\n\n\nytd_return_num\ncompany’s year-to-date return percentage\n\n\nsector\ncompany’s industry\n\n\nreturn_category\npositive if ytd_return_num > 0 (positive return for the year), else negative\n\n\n\n\n#|: loading-current-day-company-and-sector-data\n\nsp500_curr_company_and_sector <- read_csv(\"data/sp500_by_company_and_sector.csv\")\nglimpse(sp500_curr_company_and_sector)\n\nRows: 503\nColumns: 8\n$ name            <chr> \"Apple\", \"Microsoft\", \"Amazon\", \"Alphabet (Class A)\", …\n$ symbol          <chr> \"AAPL\", \"MSFT\", \"AMZN\", \"GOOGL\", \"TSLA\", \"GOOG\", \"BRK.…\n$ weight          <dbl> 6.940598, 5.685000, 3.296234, 1.931161, 1.874430, 1.73…\n$ original_price  <dbl> 177.88758, 333.04188, 164.96633, 143.61075, 342.80915,…\n$ current_price   <dbl> 144.00, 236.16, 115.13, 99.91, 214.29, 100.60, 278.50,…\n$ ytd_return_num  <dbl> -19.05, -29.09, -30.21, -30.43, -37.49, -29.92, -5.80,…\n$ sector          <chr> \"Information Technology\", \"Information Technology\", \"C…\n$ return_category <chr> \"negative\", \"negative\", \"negative\", \"negative\", \"negat…\n\n\nResults:"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Uma: Undeclared Sophomore\nPaul: Freshman in CS\nHannah: Freshman in CS\nRyan: Freshman in CS\nZaid: Sophomore in CS"
  }
]